// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
  output   = "../generated/prisma"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

enum Role {
  USER
  ADMIN
}

model User {
  id       Int    @id @default(autoincrement())
  name     String
  email    String @unique
  password String
  role     Role

  meal Meal[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Food {
  id            Int    @id @default(autoincrement())
  name          String
  calories      Float?
  protein       Float?
  carbohydrates Float?
  fats          Float?
  fiber         Float?
  sugar         Float?

  category   Category? @relation(fields: [categoryId], references: [id])
  categoryId Int?

  meal   Meal? @relation(fields: [mealId], references: [id])
  mealId Int?

  mealFood        MealFood[]
  foodServingUnit FoodServingUnit[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Category {
  id   Int    @id @default(autoincrement())
  name String @unique

  foods Food[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model ServingUnit {
  id   Int    @id @default(autoincrement())
  name String @unique

  mealFood        MealFood[]
  foodServingUnit FoodServingUnit[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model FoodServingUnit {
  id     Int  @id @default(autoincrement())
  food   Food @relation(fields: [foodId], references: [id])
  foodId Int

  servingUnit   ServingUnit @relation(fields: [servingUnitId], references: [id])
  servingUnitId Int

  grams Float?

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Meal {
  id       Int      @id @default(autoincrement())
  dateTime DateTime

  user   User @relation(fields: [userId], references: [id])
  userId Int

  foods    Food[]
  mealFood MealFood[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model MealFood {
  id     Int   @id @default(autoincrement())
  food   Food  @relation(fields: [foodId], references: [id])
  foodId Int
  amount Float

  meal   Meal @relation(fields: [mealId], references: [id])
  mealId Int

  servingUnit   ServingUnit @relation(fields: [servingUnitId], references: [id])
  servingUnitId Int

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}
